services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web
    volumes:
      - static_files:/app/backend/staticfiles
      - web_logs:/app/logs:rw
    env_file:
      - .env.prod
    depends_on:
      oracle-db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
  oracle-db:
    image: gvenzl/oracle-xe:21-slim-faststart
    container_name: oracle-db
    env_file:
      - .env.prod
    volumes:
      - oracle_data:/opt/oracle/oradata
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 300s
  oracle-exporter:
    image: ghcr.io/iamseth/oracledb_exporter:0.6.0
    container_name: oracle-exporter
    ports:
      - "9161:9161"  # Oracle exporter 포트
    environment:
      - DATA_SOURCE_NAME=oracle://django_db:DjangoPassword123@oracle-db:1521/XEPDB1
    networks:
      - app-network
    depends_on:
      - oracle-db
      - prometheus
    restart: unless-stopped
  nginx:
    image: nginx:1.29.1-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infra/nginx/conf.d:/etc/nginx/conf.d:ro
      - static_files:/var/www/staticfiles:ro
      - nginx_logs:/var/log/nginx:rw
    depends_on:
      - web
    networks:
      - app-network
    restart: unless-stopped
  prometheus:
    image: prom/prometheus:v3.6.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus:rw
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    depends_on:
      - web
    networks:
      - app-network
    restart: unless-stopped
  cadvisor:
    image:
      gcr.io/cadvisor/cadvisor:v0.52.0
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - app-network
    restart: unless-stopped
  grafana:
    image: grafana/grafana:main
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana:rw
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=1234
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - app-network
    restart: unless-stopped
networks:
  app-network:
    driver: bridge
volumes:
  web_logs:
  nginx_logs:
  prometheus_data:
  grafana_data:
  static_files:
  oracle_data: